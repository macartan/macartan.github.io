---
title: "Replication code for:"
subtitle: "Mobilizing Europe's citizens to take action on migration and climate change: Behavioral evidence from 27 EU member states (JEPP 2025)"
execute:
  message: false
  warning: false
format: 
  html:
    number-sections: true
    toc: true
    embed-resources: true
    code-fold: true
    author: Hieko Giebler, Johannes Giesseke, Macartan Humphreys, Swen Hutter, Heike Klüver
abstract: "This paper investigates how two politicized issues—migration and climate change—mobilize citizens across European countries. Building on the concept of issue-specific mobilization potentials, we examine citizens’ willingness to support petitions related to the two issues using an original behavioral measure embedded in the 2024 European Parliament Election Study. We document variation in political engagement and examine how opposing stances on issues owned by the left or the right mobilize citizens, how citizens’ agreement with issue positions affects support, and whether grievances, participation cultures, politicization levels, and the ideology of the national government can explain national-level variation. Our results indicate substantial variation in petition support across countries and issues, with the right-wing petition on migration attracting the most support. However, our country-level measures do not explain this variation well. Overall, our findings highlight the need for more nuanced, issue-specific approaches to understanding cross-national patterns of political participation."
---

```{r echo=FALSE, message=FALSE, warning=FALSE, include = FALSE}

pacman::p_load(bayesplot, countrycode, DeclareDesign, ggrepel, kableExtra, knitr, lme4, 
               lmerTest, multilevelTools, rstan, rstanarm, tidyverse,vtable)

options(mc.cores = parallel::detectCores())
rstan_options(auto_write = FALSE)
run <- FALSE
theme_set(theme_bw())
```

# Setup

## Import data

Dataset from EES 2024 merged with country level indicators.

```{r}
# source("data_prep.R")
data <- read_rds("assets/ees_petition_data.rds")

```

## Labels

Labels defined for graphs.

```{r}
# Treatment group labels in data and for figures
tgg <- c("Climate (left)",
         "Climate (right)",
         "Migration (left)",
         "Migration (right)")
names(tgg) <- tgg

tg <- c("CLI left", "CLI right", "MIG left", "MIG right")
treatment_groups <- as.list(tg)
names(treatment_groups) <- tgg


# Core country covariates

vs <- c(
  "grievances",
  "protest_participants",
  "politicization",
  "lfirstp",
  "lsecondp",
  "gov_lr"
)
vs_labels <- c(
  "Grievances",
  "Protest participants\n(per million per year)",
  "Politicization\n(polarization x salience)",
  "Lijphart 1",
  "Lijphart 2",
  "Left / Right \n(government orientation)"
)

vars <- as.list(vs)
names(vars) <- vs

# Additional country covariates
vs_other <-
  c(
    "sal",
    "pol",
    "vulnerability",
    "cri",
    "ims_abs",
    "ims_perc",
    "ref_abs",
    "ref_perc",
    "protest_events",
    "protest_intensity"
  )
vs_other_labs <-
  c(
    "Salience",
    "Polarization",
    "Vulnerability",
    "Climate risk index",
    "Immigrants (absolute)",
    "Immigrants (per capita)",
    "Refugees (absolute)",
    "Refugees (per capita)",
    "Protest events",
    "Protest intensity"
  )
```

## Prepare country df

Country level data frame.

```{r}

country_df <-
  data |> 
  group_by(country, left, topic, treatment_grp) |>
  summarize(position = mean(position, na.rm = TRUE), 
            outcome1b = mean(outcome1b, na.rm = TRUE),
            grievances = mean(grievances, na.rm = TRUE),
            politicization = mean(politicization, na.rm = TRUE),
            protest_participants = mean(protest_participants, na.rm = TRUE)) |>
  ungroup() |>
  mutate(groups = haven::as_factor(treatment_grp),
         Left = 1*(left == "Left"),
         Left = Left - mean(Left),
         Climate = 1*(topic == "Climate change"),
         Climate = Climate - mean(Climate)
         )
```




# Results

## Figure 1: Distribution of positions in migration and climate, country averages

```{r}
data |> 
  group_by(Country) |> 
  summarize(
    antimigration = mean(pos_mig, na.rm = TRUE)/10,
    anticlimate = mean(pos_cli, na.rm = TRUE)/10) |> 
  ggplot(aes(antimigration, anticlimate, label = Country)) +
  geom_text()  + 
  xlab("average support: right  position on migration")  + 
  ylab("average support: right  position on climate")


```


## Figure 2: Share of respondents supporting petitions 

```{r, fig.cap = "Share signing petitions of each type. Each dot represents a country average participation rate for Left and Right sides of a petition."}

data |> 
  group_by(Country, topic, left) |> 
  summarize(petition = mean(outcome1b), .groups = 'drop') |> 
  pivot_wider(names_from = left, values_from = petition) |> 
  ggplot(aes(Right, Left, label = Country)) +  
    geom_point(size = 3) +  # Change the size of the points as needed
    geom_text_repel() +  # Use ggrepel to repel text labels
    facet_grid(~topic) + 
    geom_abline(color = "red") + 
    theme_minimal()  # Optional: change theme for better appearance


```

## Figure 3: Petition support as a function of citizens’ position

```{r, fig.cap = "Petition signing as a function of position on each issue. All are increasing but are remarkable high on the left of the x axis"}
data |>  
  ggplot(aes(position, outcome1b)) +  
  geom_smooth()  + 
  facet_grid(topic ~  left) + ylim(0, NA)


```


## Figure 4: Predicted probabilities 

Sample estimation:

```{r}
# Fit the logistic mixed-effects model
if(run)
  rstanarm::stan_glmer(outcome1b ~ 1 + (1 | Country), data = data, family = binomial(link = "logit")) |>
  write_rds("saved/M_1.1.rds")

posterior_samples <- read_rds("saved/M_1.1.rds") |> as.data.frame()

```


```{r}
# Extract the posterior samples of the random effects

# Get the unique country names
Countries <- unique(data$Country)
Countries_list <- as.list(Countries)
names(Countries_list) <- Countries

# Function to calculate predicted probabilities for each country
get_predicted_probs <- function(country, fit = posterior_samples) {
  random_intercept <-  fit |> 
    select(starts_with(paste0("b[(Intercept) Country:", country))) 
  common_intercept <- fit$`(Intercept)`
  log_odds <- (common_intercept + random_intercept)[[1]]
  # Convert log-odds to probabilities
  data.frame(probs = exp(log_odds) / (1 + exp(log_odds)))
}

# Create a dataframe to store the results
results <- lapply(Countries_list, get_predicted_probs) |>
  bind_rows(.id = "Country")

# Summarize the predicted probabilities
summary_results <- results %>%
  group_by(Country) %>%
  summarize(
    expectation = mean(probs),
    min_prob = min(probs),
    max_prob = max(probs)
  ) |>
  left_join(data |> group_by(Country) |> summarize(raw = mean(outcome1b))) |>
  mutate(Country = fct_reorder(Country, expectation))


# Plot the results
ggplot(summary_results, aes(x = Country, y = expectation)) +
  geom_point() +
  geom_errorbar(aes(ymin = min_prob, ymax = max_prob)) +
  labs(title = "Predicted Probabilities of Petition Signing by Country",
       y = "Predicted Probability",
       x = "Country") +
  theme_minimal() + coord_flip() +
  geom_point(aes(Country, raw), color = "red")


```


```{r}
# Prep data so that position is in line with the petition content

decomp_model <- 
  function(g) 
  rstanarm::stan_glmer(
    outcome1b ~ 1 + position + (1 + position | Country),
    family = binomial(link = "logit"),
    data = data |> filter(groups == g) 
    )

if(run)
  treatment_groups |> 
  lapply(decomp_model)|>
  write_rds("saved/M_1.2.rds")

M_1.2 <-  read_rds("saved/M_1.2.rds")

posterior_1.2 <- lapply(M_1.2,  as.data.frame)
```

## Figure 5: Model predictions on support probabilities 


```{r}
lapply(posterior_1.2, 
       function(df)
         df|> select(b = position, a = `(Intercept)`)) |> 
  bind_rows(.id = "petition") |>
  mutate(y0 = 1/(1+exp(-a)),
         y1 = 1/(1+exp(-a-b)),
         change = y1 - y0) |>
  ggplot() + 
  geom_histogram(aes(x = y0), fill = "red", alpha = .5)  +
  geom_histogram(aes(x = y1), fill = "blue", alpha = .5) + facet_wrap(~petition) + 
  xlab("Signing propensity")



```



## Figure 6: Decomposition of variation


Decomposition function:

```{r}


decomposition <- function(g) {
  
 names(posterior_1.2) <- treatment_groups
 posterior <- posterior_1.2[[g]]

 c_df <- country_df |>  filter(groups  == g)

 X_diff <- c_df$position - mean(c_df$position)
  

delta_Y  <- {

  aj <- 
    (posterior |> select(starts_with("b[(I")) |> apply(2, mean)) + 
    (posterior |> select(starts_with("(I")) |> apply(2, mean)) 
  
  bj <- 
    (posterior |> select(starts_with("b[po")) |> apply(2, mean)) + 
    (posterior |> pull(position) |> mean()) 
  
  Y = aj + bj*c_df$position 
  
  Y - mean(Y)
}

delta_X  <- {

  bj <- 
    (posterior |> select(starts_with("b[po")) |> apply(2, mean)) + 
    (posterior |> pull(position) |> mean()) 
  
  bj*X_diff
  }

delta_b <-  {
 a_diff <- posterior |> select(starts_with("b[(I")) |> apply(2, mean)
 b_diff <- posterior |> select(starts_with("b[po")) |> apply(2, mean)
 a_diff + b_diff*mean(c_df$position) 
 }


bind_cols(
  country_df |> filter(groups == g),
  data.frame(
    delta_Y  = delta_Y,
    delta_X  = delta_X,
    delta_b  = delta_b
  )
)  |>
  select(-left, -topic) |>
  mutate(Country = haven::as_factor(country)) 

}



```


```{r, fig.height = 10, fig.width = 10}
decomps <- lapply(treatment_groups, decomposition)

decomps |> bind_rows(.id = "condition") |> 
  select(condition, Country, starts_with("delta")) |>
  gather(var, val, -condition, - Country,  - delta_Y) |> 
  mutate(var = factor(var, c("delta_b", "delta_X"), c("Difference in average response", 
                                                      "Difference in average position"))) |>
  
  ggplot(aes(delta_Y, val, label = Country, color = var)) + geom_text()+
  xlab("Difference in outcomes") + ylab("contribution") + facet_wrap(~condition) +
  theme(legend.position = "bottom")


```


## Figure 7: Country level correlates of engagement

`Stan` model:

```{r}

library(rstan)

stan_code <- "
data {
    int<lower=1> N;                // Number of observations
    int<lower=1> m;                // Number of countries
    int<lower=1,upper=m> Country[N]; // Country indices for each observation
    vector[N] y;                   // Observed data
    vector[m] X;                   // Country level predictor variable
}

parameters {
    vector[m] alpha_raw;           // Non-centered group-level intercepts
    real beta;                     // Coefficient for X
    real<lower=0> sigma;           // Error term
    real<lower=0> tau;             // Standard deviation of group-level intercepts
    real mu;                       // Mean of group-level intercepts
}

transformed parameters {
    vector[m] alpha;               // Centered group-level intercepts
    alpha = mu + tau * alpha_raw;  // Non-centered parameterization
}

model {
    // Priors
    alpha_raw ~ normal(0, 1);       // Standard normal for non-centered intercepts
    beta ~ normal(0, 2.5);          // Prior for beta
    sigma ~ normal(0, 1);           // Prior for sigma
    mu ~ normal(0, 10);             // Prior for mu 
    tau ~ normal(0, 5);             // Prior for tau
    
    // Likelihood
    for (i in 1:N) {
        y[i] ~ normal(alpha[Country[i]] + beta * X[Country[i]], sigma);
    }
}
"


f <- function(df, var, y = "outcome1b", ...) {
  
    names(df)[names(df) == var] <- "X"
    names(df)[names(df) == y] <- "y"
    
    # Select relevant columns and drop NA
    df <- df |> 
      select(X, y, Country) |> drop_na() |>
      mutate(Country = as.integer(factor(Country))) 

    stan_data <- list(
        N = nrow(df),
        m = length(unique(df$Country)),
        Country = df$Country,
        y = df$y,
        X = df |> group_by(Country) |> summarize(X = mean(X)) |> 
          pull(X) |>  as.vector()
    )

    fit <- stan(model_code = stan_code, data = stan_data, chains = 4, ...)

    return(fit)
}
```


```{r}
# Core variables
if(run)
  vars |>
  lapply(function(v) {
    treatment_groups |> lapply(function(g) {
    f(data |> filter(groups==g & position > .5), v, iter = 5000)})}) |>
  write_rds("saved/M_1.3_by_group.rds")

M_1.3_by <-  read_rds("saved/M_1.3_by_group.rds")


sumy <- function(v, g, model_list = M_1.3_by)
  model_list[[v]][[g]] |>
  as.data.frame() |> summarize(mean =  mean(beta), sd =  sd(beta), 
                               lower = quantile(beta, probs = .025),
                               upper = quantile(beta, probs = .975)) |>
  mutate(max_rhat = max(rhat(model_list[[v]][[g]])))


fig.1.3.by <- 
  vars[c(1:3, 6)] |> lapply(function(v)
  tgg |>
    lapply(function(g) sumy(v,g)) |> 
    bind_rows(.id = "group")) |>
    bind_rows(.id = "var") |>
  mutate(var = factor(var, vs, vs_labels)) |>
  ggplot(aes(mean, group)) + geom_point() + facet_wrap(~var, scales = "free_x") + 
  geom_errorbarh(aes(xmin = lower, xmax = upper, height = .2)) +
  geom_vline(xintercept = 0, color = "red")

fig.1.3.by  


```



# Appendices

## Descriptives

### Summary statistics on country level variables

<!-- ## Country level data -->

```{r, warning = FALSE, message = FALSE}

vlong <- c("position", "grievances", "politicization", "gov_lr",
          "protest_participants", "sal", "pol", "vulnerability", "cri",  
          "ims_perc",   "ref_perc", "protest_events",   "protest_intensity",
          "outcome1b")

cdf <-   data |> 
  group_by(country, left, topic, treatment_grp) |>
  summarize(across(all_of(vlong), \(x) mean(x, na.rm = TRUE)), .groups = 'drop')  |>
  ungroup() |>
  rename(support_petition = outcome1b)


cdf |>
st()
```


### Descriptives on petition versions


```{r, message = FALSE, include = FALSE}
country_summary <- data |> ungroup() |>
  group_by(left, topic) |> 
  summarize(n = n(), signing = mean(outcome1b, na.rm = TRUE), .groups = "drop") |> ungroup() |>
  kable(digits = 3, caption = "Numbers and shares signing by petition type")
```


```{r, message = FALSE, warning= FALSE}
country_summary
```

text 3

```{r}
data |> group_by(left, topic) |> 
  filter(position > .5) |> 
  summarize(n = n(), 
            signing = mean(outcome1b), 
            .groups = "drop") |> ungroup() |>
  kable(digits = 3, caption = "Numbers and shares signing by petition type among supporters (position >0.5)")
```

```{r}
av <- 
  data |> 
  group_by(Country) |> 
  summarize(`migration left` = mean(outcome1b[topic =="Migration" & left =="Left"], na.rm = TRUE),
            `migration right` = mean(outcome1b[topic =="Migration" & left !="Left"], na.rm = TRUE),
            `climate left` = mean(outcome1b[topic !="Migration" & left =="Left"], na.rm = TRUE),
            `climate right` = mean(outcome1b[topic !="Migration" & left !="Left"], na.rm = TRUE)) 

cor(av[,-1]) |> kable(caption = "Country level correlations in signing across petitions", digits = 2)

```

## Tables for core analyses

We provide tables of estimates provided in the text. 

### Figure 4

```{r}
summary_results |>  
  kable(digits = 2, col.names = c("Country", "Predicted mean", "Lower", "Upper", "Raw mean"),
                caption = "Table of results used for Figure 4")
```

### Figure 5

```{r}
lapply(posterior_1.2, 
       function(df)
         df|> select(b = position, a = `(Intercept)`)) |> 
  bind_rows(.id = "petition") |>
  mutate(y0 = 1/(1+exp(-a)),
         y1 = 1/(1+exp(-a-b)),
         change = y1 - y0) |> 
  group_by(petition) |>
  summarize(y_0 = mean(y0),
         sd_0 = sd(y0),
         y_1 = mean(y1),
         sd_1 = sd(y1),
         difference = mean(change),
         sd_difference = sd(change), .groups = 'drop') |>
  kable(digits = 2, col.names = c("Petition", "Rates | opposed", "sd", "Rates given support", "sd", "Difference", "sd"), align = c("l", "c", "c", "c", "c", "c", "c"),
                caption = "Table of results used for Figure 5")

```


### Figure 6

```{r}
decomps |> bind_rows(.id = "condition") |> 
  select(Petition = condition, Country, starts_with("delta")) |>
  kable(digits = 2, col.names = c("Petition", "Country", "delta Y", "delta X", "delta b"),
                caption = "Table of results used for Figure 6")
```


### Figure 7

```{r}
  vars[c(1:3, 6)] |> lapply(function(v)
  tgg |>
    lapply(function(g) sumy(v,g)) |> 
    bind_rows(.id = "group")) |>
    bind_rows(.id = "var") |>
  kable(digits = 2, 
        col.names=c("Covariate", "Petition", "Posterior mean", "Posterior sd", "Cred lower" , "Cred upper", "Rhat"),
        caption = "Table of results used for Figure 7. Rhat is a `stan`  convergence diagnostic.")
```

## Frequentist results

### Country level models, across all petition types

```{r, results = 'asis'}
lm_models <-
  list(
    lm_robust(outcome1b ~ position, data = country_df),
    lm_robust(outcome1b ~ Left*Climate, data = country_df),
    lm_robust(outcome1b ~ Left*Climate + position, data = country_df),
    lm_robust(outcome1b ~ Left*Climate*grievances + position,  data = country_df),
    lm_robust(outcome1b ~ Left*Climate*politicization + position,  data = country_df),
    lm_robust(outcome1b ~ Left*Climate*protest_participants + position, data = country_df),
    lm_robust(outcome1b ~ Left*Climate*grievances + Left*Climate*politicization + Left*Climate*protest_participants + position, data = country_df)
)

lm_models |> texreg::htmlreg(include.ci = FALSE)
```

### Country level models, across all petition types, including country fixed effects

```{r, results = 'asis', message = FALSE}

fe_models <-
  list(
    lm_robust(outcome1b ~ position, fixed_effects = ~country,  data = country_df),
    lm_robust(outcome1b ~ Left*Climate, fixed_effects = ~country,  data = country_df),
    lm_robust(outcome1b ~ Left*Climate + position, fixed_effects = ~country,  data = country_df),
    lm_robust(outcome1b ~ Left*Climate*grievances + position, fixed_effects = ~country,  data = country_df),
    lm_robust(outcome1b ~ Left*Climate*politicization + position, fixed_effects = ~country,  data = country_df),
    lm_robust(outcome1b ~ Left*Climate*protest_participants + position, fixed_effects = ~country,  data = country_df),
    lm_robust(outcome1b ~ Left*Climate*grievances + Left*Climate*politicization + Left*Climate*protest_participants + position, fixed_effects = ~country,  data = country_df)

)
fe_models |> texreg::htmlreg(include.ci = FALSE)
```

In these models, Left and Migration are centered on zero and so the "main" terms report estimated average effects.


### Individual level models, across all petition types

```{r, results = 'asis', message = FALSE}
data <- mutate(data, Left = 1*(left == "Left"), Climate = 1*(topic == "Climate change"))

lm_models_i <-
  list(
    lm_robust(outcome1b ~ position, data = data, cluster = Country, se_type = 'stata'),
    lm_robust(outcome1b ~ Left*Climate, data = data, cluster = Country, se_type = 'stata'),
    lm_robust(outcome1b ~ Left*Climate + position, data = data, cluster = Country, se_type = 'stata'),
    lm_robust(outcome1b ~ Left*Climate*grievances + position,  data = data, cluster = Country, se_type = 'stata'),
    lm_robust(outcome1b ~ Left*Climate*politicization + position,  data = data, cluster = Country, se_type = 'stata'),
    lm_robust(outcome1b ~ Left*Climate*protest_participants + position, data = data, cluster = Country, se_type = 'stata'),
    lm_robust(outcome1b ~ Left*Climate*grievances +  Left*Climate*politicization + 
                Left*Climate*protest_participants + 
                position, data = data, cluster = Country, se_type = 'stata')
  )
    
lm_models_i |> texreg::htmlreg(include.ci = FALSE)
```


### Individual level models, across all petition types, including country fixed effects

```{r, results = 'asis', message = FALSE}
fe_models_i <-
  list(
    lm_robust(outcome1b ~ position, data = data, cluster = Country, se_type = 'stata', fixed_effects = ~country),
    lm_robust(outcome1b ~ Left*Climate, data = data, cluster = Country, se_type = 'stata', fixed_effects = ~country),
    lm_robust(outcome1b ~ Left*Climate + position, data = data, cluster = Country, se_type = 'stata', fixed_effects = ~country),
    lm_robust(outcome1b ~ Left*Climate*grievances + position,  data = data, cluster = Country, se_type = 'stata', fixed_effects = ~country),
    lm_robust(outcome1b ~ Left*Climate*politicization + position,  data = data, cluster = Country, se_type = 'stata', fixed_effects = ~country),
    lm_robust(outcome1b ~ Left*Climate*protest_participants + position, data = data, cluster = Country, se_type = 'stata', fixed_effects = ~country),
    lm_robust(outcome1b ~ Left*Climate*grievances +  Left*Climate*politicization + 
                Left*Climate*protest_participants + 
                position, data = data, cluster = Country, se_type = 'stata', fixed_effects = ~country)
 )



fe_models_i |> texreg::htmlreg(include.ci = FALSE)
```

## Duration and signing

Evidence on whether "speeders" are more or less likely to sign.

```{r, eval = TRUE, warning = FALSE}
data |> mutate(signing = factor(outcome1b)) |> 
  ggplot(aes(duration, linetype = signing)) + 
  geom_density() +  xlim(0, 2500)
```

## Additional Bayesian analyses

The "grievance" measure in the text is generated using a migration measure for migration petitions and climate measure for climate petitions. The "politicization" measure is generated by combining salience and polarization measures. 

The below analyses implement Analysis 3 using  these subcomponents and close substitute measures.

```{r, fig.cap = "Alternative covariates"}

if(run)
  vs_other |>
  lapply(function(v) {
    treatment_groups |> lapply(function(g) {
    f(data |> filter(groups==g & position > .5), v, iter = 5000)})}) |>
  write_rds("M_1.3_by_group_other.rds")

M_1.3_by_group_other <-  read_rds("saved/M_1.3_by_group_other.rds")
names(M_1.3_by_group_other) <- vs_other

names(vs_other) <- vs_other

fig.1.3.by_appendix_df <- 
  vs_other |> lapply(function(v)
  tgg |>
    lapply(function(g) sumy(v,g, model_list = M_1.3_by_group_other)) |> 
    bind_rows(.id = "group")) |>
    bind_rows(.id = "var") |>
  mutate(var = factor(var, vs_other, vs_other_labs))

fig.1.3.by_appendix_df |> filter(max_rhat < 1.01) |>
  ggplot(aes(mean, group)) + geom_point() + facet_wrap(~var, scales = "free_x") + 
  geom_errorbarh(aes(xmin = lower, xmax = upper, height = .2)) +
  geom_vline(xintercept = 0, color = "red")

```

In response to comments by reviewers, the below analyses implement Analysis 3 using  additional measures capturing Lijphart's distinction between majoritarian and consensus democracy to investigate the effect of political opportunity structures. 

```{r, fig.cap = "Additional covariates"}

fig.1.3.by.extra <- 
  vars[c(4,5)] |> lapply(function(v)
  tgg |>
    lapply(function(g) sumy(v,g)) |> 
    bind_rows(.id = "group")) |>
    bind_rows(.id = "var") |>
  mutate(var = factor(var, vs, vs_labels)) |>
  ggplot(aes(mean, group)) + geom_point() + facet_wrap(~var, scales = "free_x") + 
  geom_errorbarh(aes(xmin = lower, xmax = upper, height = .2)) +
  geom_vline(xintercept = 0, color = "red")

fig.1.3.by.extra  

```
